---
import { Github, Linkedin, Mail } from 'lucide-astro';
import X from '@components/icons/X.astro';
import { Image } from 'astro:assets';

interface Props {
    entry: any; // You might want to type this properly with your collection type
}

const { entry } = Astro.props;
const typeLabel =
    entry?.data?.type === 'bod'
        ? 'Board of Directors'
        : entry?.data?.type === 'volunteer'
            ? 'Volunteers'
            : entry?.data?.type === 'advisor'
                ? 'Advisors'
                : undefined;
---

<div class="hidden lg:block">
    <Image
        class="w-full rounded-lg object-cover mb-6 shadow-md"
        src={entry.data.headshot}
        alt={entry.data.name}
        width={896}
        height={1280}
        quality={80}
        format="webp"
    />
    <div class="space-y-4">
        <div>
            <h1 class="text-3xl font-bold text-body-base mb-1">{entry.data.name}</h1>
            <p class="text-lg text-body-base font-medium mb-1">{entry.data.jobTitle}</p>
            {typeLabel && <p class="text-sm text-body-base opacity-70">{typeLabel}</p>}
        </div>

        <div class="space-y-2 pt-2">
            {
                entry.data.email && (
                    <a
                        href={`mailto:${entry.data.email}`}
                        class="flex items-center gap-2 text-body-base hover:text-primary transition-colors"
                    >
                        <Mail size={18} strokeWidth={1.5} />
                        <span class="text-sm">Email</span>
                    </a>
                )
            }
            {
                entry.data.github && (
                    <a
                        href={entry.data.github}
                        target="_blank"
                        rel="noopener noreferrer"
                        class="flex items-center gap-2 text-body-base hover:text-primary transition-colors"
                        aria-label="GitHub Profile"
                    >
                        <Github size={18} strokeWidth={1.5} />
                        <span class="text-sm">{entry.data.githubUsername || 'GitHub'}</span>
                    </a>
                )
            }
            {
                entry.data.xSocial && (
                    <a
                        href={entry.data.xSocial}
                        target="_blank"
                        rel="noopener noreferrer"
                        class="flex items-center gap-2 text-body-base hover:text-primary transition-colors"
                        aria-label="X (Twitter) Profile"
                    >
                        <X size={16} />
                        <span class="text-sm">{entry.data.xSocialUsername ? `@${entry.data.xSocialUsername}` : 'X'}</span>
                    </a>
                )
            }
            {
                entry.data.linkedin && (
                    <a
                        href={entry.data.linkedin}
                        target="_blank"
                        rel="noopener noreferrer"
                        class="flex items-center gap-2 text-body-base hover:text-primary transition-colors"
                        aria-label="LinkedIn Profile"
                    >
                        <Linkedin size={18} strokeWidth={1.5} />
                        <span class="text-sm">{entry.data.linkedinUsername || 'LinkedIn'}</span>
                    </a>
                )
            }
        </div>
    </div>
</div>

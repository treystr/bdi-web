---
import { getCollection } from 'astro:content';
import { getPaddingClass } from '@utils/styleUtils';
import type { PaddingSize } from '@utils/styleUtils';
import { Image } from 'astro:assets';

interface Props {
    padding?: PaddingSize;
    paddingTop?: PaddingSize;
    paddingBottom?: PaddingSize;
    memberType?: 'bod' | 'volunteer' | 'advisor';
    title?: string;
    description?: string;
    align?: 'left' | 'center' | 'right';
}

const { padding, paddingTop, paddingBottom, memberType, title, description, align = 'left' } = Astro.props as Props;
const paddingClass = getPaddingClass({ padding, paddingTop, paddingBottom });

// Determine grid alignment classes
const getAlignmentClasses = (align: string) => {
    switch (align) {
        case 'center':
            return 'justify-center';
        case 'right':
            return 'justify-end';
        default:
            return 'justify-start';
    }
};

// Determine text alignment classes
const getTextAlignmentClasses = (align: string) => {
    switch (align) {
        case 'center':
            return 'text-center';
        case 'right':
            return 'text-right';
        default:
            return 'text-left';
    }
};

const alignmentClass = getAlignmentClasses(align);
const textAlignmentClass = getTextAlignmentClasses(align);

const teamMembers = await getCollection('team', ({ data }) => {
    if (data.publish === false) return false;
    if (memberType) {
        return data.type === memberType;
    }
    return true;
});

// Sort team members by order
const sortedTeamMembers = teamMembers.sort((a, b) => a.data.order - b.data.order);
---

<section class:list={['relative', paddingClass]}>
    <div class="site-container--content mx-auto px-4">
        {title && (
            <div class:list={[textAlignmentClass, 'mb-10']}>
                <h2 class="text-h3">{title}</h2>
                {description && (
                    <p class="text-lg opacity-90 mt-4">{description}</p>
                )}
            </div>
        )}
        <div class:list={['grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-8 xl:gap-x-8 xl:gap-y-14', alignmentClass]}>
            {
                sortedTeamMembers.map((member, index) => (
                    <div
                        class="flex flex-col group"
                        data-aos="fade-up"
                        data-aos-delay={index * 100}
                        data-aos-duration="800"
                    >
                        <a href={`/team/${member.id}`} class="flex flex-col group rounded-md">
                            <div class="relative mb-4 overflow-hidden rounded-md">
                                <span class="absolute inset-0 -mt-12 h-400 w-1/2 translate-x-[250%] rotate-12 bg-white opacity-20  group-hover:transition-all  group-hover:duration-300 ease-out group-hover:translate-x-[-250%] z-10" />
                                {member.data.headshot ? (
                                    <Image
                                        src={member.data.headshot}
                                        alt=""
                                        width={896}
                                        height={1280}
                                        quality={80}
                                        format="webp"
                                        class="w-full h-auto aspect-[3/4] object-cover rounded-md group-hover:scale-[1.02] hover:brightness-110 transition-all duration-500 ease-in-out"
                                        loading="eager"
                                        decoding="async"
                                    />
                                ) : (
                                    <div class="w-full aspect-[3/4] bg-gray-200 rounded-md flex items-center justify-center">
                                        <span class="text-gray-400">No Image</span>
                                    </div>
                                )}
                            </div>
                            <h3 class="text-h5 font-medium transition-colors duration-500 group-hover:text-primary">
                                {member.data.name}
                            </h3>
                            <p class="text-xsmall text-body-base">{member.data.jobTitle}</p>
                        </a>
                    </div>
                ))
            }
        </div>
    </div>
</section>

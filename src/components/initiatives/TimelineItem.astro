---
interface Props {
    number?: number;
    date: string;
    blockHeight: number;
    businessName: string;
    businessWebsite?: string;
    photoUrl: string;
    description: string;
}

const { number, date, blockHeight, businessName, businessWebsite, photoUrl, description } = Astro.props;

const formattedDate = new Intl.DateTimeFormat('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
}).format(new Date(date));

// Fallback image if photo doesn't exist
const imageSrc = photoUrl || '/images/placeholder-business.jpg';

// Format block height without commas
const formattedBlockHeight = blockHeight.toString();

// Get first sentence or first line of description for mobile preview
const getFirstLine = (text: string) => {
    // Split by sentence first, then by length if sentence is too long
    const sentences = text.split(/[.!?]+/);
    const firstSentence = sentences[0]?.trim();
    
    if (firstSentence && firstSentence.length <= 120) {
        return firstSentence + (sentences.length > 1 ? '...' : '');
    }
    
    // If first sentence is too long, truncate at word boundary
    if (firstSentence && firstSentence.length > 120) {
        const words = firstSentence.split(' ');
        let truncated = '';
        for (const word of words) {
            if ((truncated + ' ' + word).length > 120) break;
            truncated += (truncated ? ' ' : '') + word;
        }
        return truncated + '...';
    }
    
    return text;
};

const firstLine = getFirstLine(description);
---

<article class="timeline-item" data-aos="fade-up">
    <div class="timeline-marker">
        <div class="timeline-dot"></div>
        <div class="timeline-number">{number}</div>
    </div>
    
    <!-- Desktop Layout (existing) -->
    <div class="timeline-card desktop-card" style={`background-image: url('${imageSrc}')`}>
        <div class="timeline-content">
            <div class="timeline-header">
                <time datetime={date} class="timeline-date">
                    {formattedDate}
                </time>
                <div class="timeline-block-height">
                    Block #{formattedBlockHeight}
                </div>
            </div>
            
            <h3 class="timeline-business-name">
                {businessWebsite ? (
                    <a href={businessWebsite} target="_blank" rel="noopener noreferrer">
                        {businessName}
                        <svg class="external-link-icon" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"></path>
                            <polyline points="15 3 21 3 21 9"></polyline>
                            <line x1="10" y1="14" x2="21" y2="3"></line>
                        </svg>
                    </a>
                ) : (
                    <span>{businessName}</span>
                )}
            </h3>
            
            <p class="timeline-description">{description}</p>
        </div>
    </div>

    <!-- Mobile Layout (new card structure) -->
    <div class="mobile-card">
        <!-- Card Header -->
        <div class="mobile-card-header">
            <span class="mobile-card-number">{number}</span>
            <h3 class="mobile-card-business-name">
                {businessWebsite ? (
                    <a href={businessWebsite} target="_blank" rel="noopener noreferrer">
                        {businessName}
                        <svg class="external-link-icon" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"></path>
                            <polyline points="15 3 21 3 21 9"></polyline>
                            <line x1="10" y1="14" x2="21" y2="3"></line>
                        </svg>
                    </a>
                ) : (
                    <span>{businessName}</span>
                )}
            </h3>
        </div>

        <!-- Card Content (Image) -->
        <div class="mobile-card-image">
            <img src={imageSrc} alt={`${businessName} - Bitcoin onboarding`} loading="lazy" />
        </div>

        <!-- Card Footer -->
        <div class="mobile-card-footer">
            <div class="mobile-card-meta">
                <time datetime={date} class="mobile-card-date">
                    {formattedDate}
                </time>
                <div class="mobile-card-block-height">
                    Block #{formattedBlockHeight}
                </div>
            </div>
            
            <div class="mobile-card-description" data-full-description={description}>
                <p class="description-preview">{firstLine}</p>
                <p class="description-full" style="display: none;">{description}</p>
                {firstLine !== description && (
                    <button class="expand-btn" type="button">
                        <span class="expand-text">Read more</span>
                        <span class="collapse-text" style="display: none;">Read less</span>
                        <svg class="expand-icon" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <polyline points="6 9 12 15 18 9"></polyline>
                        </svg>
                    </button>
                )}
            </div>
        </div>
    </div>
</article>

<style>
    .timeline-item {
        position: relative;
        display: grid;
        grid-template-columns: 80px 1fr;
        gap: 2rem;
        margin-bottom: 3rem;
        padding: 0 1rem;
    }

    .timeline-marker {
        position: relative;
        display: flex;
        flex-direction: column;
        align-items: center;
        padding-top: 0.5rem;
    }

    .timeline-dot {
        width: 20px;
        height: 20px;
        border-radius: 50%;
        background: var(--color-accent);
        border: 4px solid var(--color-base);
        box-shadow: 0 0 0 2px var(--color-accent);
        position: relative;
        z-index: 2;
    }

    .timeline-number {
        margin-top: 1rem;
        font-size: 1.5rem;
        font-weight: 800;
        color: var(--color-accent);
        text-align: center;
    }

    /* Vertical line connecting dots */
    .timeline-item:not(:last-child) .timeline-marker::after {
        content: '';
        position: absolute;
        top: 30px;
        left: 50%;
        transform: translateX(-50%);
        width: 2px;
        height: calc(100% + 3rem);
        background: linear-gradient(180deg, 
            var(--color-accent) 0%, 
            rgba(var(--color-accent-rgb), 0.3) 50%,
            rgba(var(--color-accent-rgb), 0.1) 100%
        );
    }

    /* Desktop Layout */
    .desktop-card {
        border: 1px solid rgba(var(--color-body-base-rgb), 0.1);
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        aspect-ratio: 4 / 3;
        display: flex;
        flex-direction: column;
        justify-content: flex-end;
        position: relative;
    }

    .desktop-card:hover {
        transform: translateY(-4px);
        box-shadow: 0 8px 24px rgba(0, 0, 0, 0.12);
    }

    .timeline-content {
        padding: 1.5rem;
        background: rgba(255, 255, 255, 0.75);
        backdrop-filter: blur(8px);
        position: relative;
        z-index: 1;
        border-top: 1px solid rgba(255, 255, 255, 0.5);
    }

    .timeline-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1rem;
        flex-wrap: wrap;
        gap: 0.5rem;
    }

    .timeline-date {
        font-size: 0.875rem;
        font-weight: 600;
        color: var(--color-accent);
    }

    .timeline-block-height {
        font-size: 0.75rem;
        color: rgba(var(--color-body-base-rgb), 0.6);
        font-family: monospace;
    }

    .timeline-business-name {
        font-size: 1.5rem;
        font-weight: 700;
        margin: 0 0 1rem 0;
        color: var(--color-body-base);
        line-height: 1.3;
    }

    .timeline-business-name a {
        color: inherit;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        transition: color 0.2s ease;
    }

    .timeline-business-name a:hover {
        color: var(--color-accent);
    }

    .external-link-icon {
        flex-shrink: 0;
        opacity: 0.6;
    }

    .timeline-description {
        font-size: 1rem;
        line-height: 1.6;
        color: rgba(var(--color-body-base-rgb), 0.8);
        margin: 0;
    }

    /* Mobile Layout */
    .mobile-card {
        display: none;
        border: 1px solid rgba(var(--color-body-base-rgb), 0.1);
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);
        background: var(--color-base);
    }

    .mobile-card-header {
        display: flex;
        align-items: center;
        gap: 1rem;
        padding: 1rem 1.25rem;
        border-bottom: 1px solid rgba(var(--color-body-base-rgb), 0.1);
        background: rgba(var(--color-accent-rgb), 0.05);
    }

    .mobile-card-number {
        font-size: 1.5rem;
        font-weight: 800;
        color: var(--color-accent);
        flex-shrink: 0;
        width: 2rem;
        text-align: center;
    }

    .mobile-card-business-name {
        font-size: 1.125rem;
        font-weight: 700;
        margin: 0;
        color: var(--color-body-base);
        line-height: 1.3;
        flex: 1;
    }

    .mobile-card-business-name a {
        color: inherit;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        transition: color 0.2s ease;
    }

    .mobile-card-business-name a:hover {
        color: var(--color-accent);
    }

    .mobile-card-image {
        aspect-ratio: 4 / 3;
        overflow: hidden;
    }

    .mobile-card-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        display: block;
    }

    .mobile-card-footer {
        padding: 1.25rem;
    }

    .mobile-card-meta {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1rem;
        flex-wrap: wrap;
        gap: 0.5rem;
    }

    .mobile-card-date {
        font-size: 0.875rem;
        font-weight: 600;
        color: var(--color-accent);
    }

    .mobile-card-block-height {
        font-size: 0.75rem;
        color: rgba(var(--color-body-base-rgb), 0.6);
        font-family: monospace;
    }

    .mobile-card-description {
        margin: 0;
    }

    .description-preview,
    .description-full {
        font-size: 0.9375rem;
        line-height: 1.6;
        color: rgba(var(--color-body-base-rgb), 0.8);
        margin: 0 0 0.75rem 0;
    }

    .expand-btn {
        background: none;
        border: none;
        color: var(--color-accent);
        font-size: 0.875rem;
        font-weight: 600;
        cursor: pointer;
        display: inline-flex;
        align-items: center;
        gap: 0.25rem;
        padding: 0;
        transition: color 0.2s ease;
    }

    .expand-btn:hover {
        color: var(--color-accent-dark, var(--color-accent));
    }

    .expand-icon {
        transition: transform 0.2s ease;
        flex-shrink: 0;
    }

    .expand-btn.expanded .expand-icon {
        transform: rotate(180deg);
    }

    @media (max-width: 768px) {
        .timeline-item {
            grid-template-columns: 1fr;
            gap: 0;
            margin-bottom: 2rem;
        }

        .timeline-marker {
            display: none;
        }

        .desktop-card {
            display: none;
        }

        .mobile-card {
            display: block;
        }

        /* Adjust vertical line for mobile */
        .timeline-item:not(:last-child)::after {
            content: '';
            position: absolute;
            left: 50%;
            bottom: -1rem;
            transform: translateX(-50%);
            width: 2px;
            height: 1rem;
            background: linear-gradient(180deg, 
                rgba(var(--color-accent-rgb), 0.3) 0%, 
                rgba(var(--color-accent-rgb), 0.1) 100%
            );
        }
    }

    @media (min-width: 769px) {
        .mobile-card {
            display: none;
        }
    }
</style>

<script>
    // Handle expand/collapse functionality for mobile descriptions
    document.addEventListener('DOMContentLoaded', () => {
        const expandBtns = document.querySelectorAll('.expand-btn');
        
        expandBtns.forEach(btn => {
            btn.addEventListener('click', () => {
                const description = btn.closest('.mobile-card-description') as HTMLElement;
                if (!description) return;
                
                const preview = description.querySelector('.description-preview') as HTMLElement;
                const full = description.querySelector('.description-full') as HTMLElement;
                const expandText = btn.querySelector('.expand-text') as HTMLElement;
                const collapseText = btn.querySelector('.collapse-text') as HTMLElement;
                
                if (!preview || !full || !expandText || !collapseText) return;
                
                const isExpanded = btn.classList.contains('expanded');
                
                if (isExpanded) {
                    // Collapse
                    preview.style.display = 'block';
                    full.style.display = 'none';
                    expandText.style.display = 'inline';
                    collapseText.style.display = 'none';
                    btn.classList.remove('expanded');
                } else {
                    // Expand
                    preview.style.display = 'none';
                    full.style.display = 'block';
                    expandText.style.display = 'none';
                    collapseText.style.display = 'inline';
                    btn.classList.add('expanded');
                }
            });
        });
    });
</script>


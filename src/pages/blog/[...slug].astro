---
import { getCollection, render } from 'astro:content';
import Layout from '@layouts/Layout.astro';
import PageHeader from '@components/sections/PageHeader.astro';
import CategoryPill from '@components/ui/CategoryPill.astro';
import Date from '@components/ui/Date.astro';
import { Image } from 'astro:assets';

export async function getStaticPaths() {
    const posts = await getCollection('blog');
    return posts.map((post) => ({
        params: { slug: post.id },
        props: { post },
    }));
}

const { post } = Astro.props;
const { Content } = await render(post);

// Use SEO data from frontmatter if available, fallback to regular post data
const seoTitle = post.data.seo?.title || post.data.title;
const seoDescription = post.data.seo?.description || post.data.excerpt;

// For SEO image, use the seo.image if provided, otherwise use the featured image
let seoImage: string | undefined = post.data.seo?.image;

// If seoImage is provided but not an absolute URL, make it absolute
if (seoImage && !seoImage.startsWith('http')) {
    seoImage = seoImage.startsWith('/') ? seoImage : `/${seoImage}`;
}
// If no SEO image is specified, but we have a featured image, use its src property
else if (!seoImage && post.data.featuredImage) {
    // featuredImage is an ImageMetadata object from Astro's content collections
    // We can use its src property directly, which Astro will process during build
    seoImage = post.data.featuredImage.src;
}
---

<Layout title={seoTitle} description={seoDescription} image={seoImage}>
    <PageHeader 
        title={post.data.title} 
        description={post.data.excerpt} 
        background="base" 
    />

    <article class="site-container--article mx-auto px-4 pb-base">
        <div class="flex items-center justify-center gap-4 text-body-base/70 mb-8">
            <Date date={post.data.publishDate} />
            {
                post.data.categories && (
                    <div class="flex flex-wrap gap-2">
                        {post.data.categories.map((category) => (
                            <CategoryPill category={category} />
                        ))}
                    </div>
                )
            }
        </div>

        {
            post.data.featuredImage && (
                <Image
                    src={post.data.featuredImage}
                    alt=""
                    width={1200}
                    height={675}
                    class="w-full h-auto rounded-lg border mb-12 border-black"
                    quality={80}
                    format="webp"
                />
            )
        }

        <div class="prose prose-lg max-w-none">
            <Content />
        </div>
    </article>
</Layout>

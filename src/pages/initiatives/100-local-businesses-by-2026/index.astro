---
import { getEntry, render } from 'astro:content';
import Layout from '@layouts/Layout.astro';
import FullScreenHero from '@components/sections/FullScreenHero.astro';
import CtaBanner from '@components/sections/CtaBanner.astro';
import Timeline from '@components/initiatives/Timeline.astro';
import onboardingData from '@data/onboarding.json';
import heroImage from '@assets/images/hero/hero-bizgrid.jpg';

// Get the initiative entry
const entry = await getEntry('initiatives', '100-local-businesses-by-2026');
if (!entry) {
    return Astro.redirect('/404');
}

const { Content } = await render(entry);

// Calculate stats
const sortedEntries = [...onboardingData].sort((a, b) => 
    new Date(a.date).getTime() - new Date(b.date).getTime()
);

const total = sortedEntries.length;

// Use SEO data from frontmatter if available
const seoTitle = entry.data.seo?.title || entry.data.title;
const seoDescription = entry.data.seo?.description || entry.data.shortDescription;

// Hero content
const heroContent = {
    title: entry.data.title,
    backgroundImage: heroImage,
    description: entry.data.shortDescription,
    overlayOpacity: 0.85,
    contentPosition: 'center' as const,
    textAlign: 'center' as const,
    ...(entry.data.hero?.image && { backgroundImage: entry.data.hero.image }),
    simpleStatsContent: {
        count: total,
        goal: 100,
        label: "Businesses Onboarded"
    }
};

// Donate CTA
const donateCta = {
    eyebrow: "SUPPORT THIS INITIATIVE",
    title: `Help Us Achieve: ${entry.data.title}`,
    description: "Your donation directly funds this program and helps us create lasting impact in DC communities. Every contribution, big or small, makes a difference.",
    buttons: [
        {
            text: "Donate Now",
            link: "/donate",
            variant: "primary" as const
        },
        {
            text: "Contact Us",
            link: "/contact",
            variant: "secondary" as const
        }
    ]
};

// Status badge styling
const statusStyles = {
    active: 'bg-green-100 text-green-800',
    completed: 'bg-blue-100 text-blue-800',
    planned: 'bg-yellow-100 text-yellow-800',
};
---

<Layout title={seoTitle} description={seoDescription} fullscreenHero={true}>
    <FullScreenHero content={heroContent} />

    {/* Main Content */}
    <article class="site-container--article mx-auto px-4 prose prose-lg mt-8 mb-16">
        <Content />
    </article>

    {/* Timeline */}
    <Timeline />

    {/* Donate CTA */}
    <CtaBanner
        content={donateCta}
        variant="contained"
        background="light"
        padding="large"
    />

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const copyBtn = document.getElementById('copy-link-btn');
            if (copyBtn) {
                copyBtn.addEventListener('click', async () => {
                    const link = copyBtn.getAttribute('data-link');
                    if (link) {
                        try {
                            await navigator.clipboard.writeText(link);
                            const originalText = copyBtn.textContent;
                            copyBtn.textContent = 'Copied!';
                            setTimeout(() => {
                                copyBtn.textContent = originalText;
                            }, 2000);
                        } catch (err) {
                            console.error('Failed to copy:', err);
                        }
                    }
                });
            }
        });
    </script>
</Layout>

